{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/luuuk/Desktop/angular/shop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../basket.service\";\nimport * as i2 from \"@angular/router\";\nexport class PaymantGuard {\n  constructor(basketService, router) {\n    this.basketService = basketService;\n    this.router = router;\n  }\n\n  canActivate(route, state) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const that = _this;\n\n      function getData() {\n        return new Promise((resolve, reject) => {\n          that.basketService.getProducts().subscribe(e => {\n            console.log(e);\n\n            if (e.hasOwnProperty(\"userLog\") && !e[\"userLog\"]) {\n              this.router.navigate([\"\"]);\n              return reject(false);\n            } else {\n              return resolve(true);\n            }\n          });\n        });\n      }\n\n      ;\n      const res = yield getData();\n      return res;\n    })();\n  }\n\n}\n\nPaymantGuard.ɵfac = function PaymantGuard_Factory(t) {\n  return new (t || PaymantGuard)(i0.ɵɵinject(i1.GetProductsService), i0.ɵɵinject(i2.Router));\n};\n\nPaymantGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PaymantGuard,\n  factory: PaymantGuard.ɵfac\n});","map":{"version":3,"sources":["C:\\Users\\luuuk\\Desktop\\angular\\shop\\src\\app\\basket\\paymant-method\\guards\\paymant-guard.ts"],"names":[],"mappings":";;;;AAOA,OAAM,MAAO,YAAP,CAAmB;AAGrB,EAAA,WAAA,CACY,aADZ,EAEY,MAFZ,EAE0B;AADd,SAAA,aAAA,GAAA,aAAA;AACA,SAAA,MAAA,GAAA,MAAA;AACL;;AAED,EAAA,WAAW,CAAC,KAAD,EAAgC,KAAhC,EAA0D;AAAA;;AAAA;AAEvE,YAAM,IAAI,GAAG,KAAb;;AACA,eAAS,OAAT,GAAgB;AAEZ,eAAO,IAAI,OAAJ,CAAY,CAAC,OAAD,EAAU,MAAV,KAAoB;AACnC,UAAA,IAAI,CAAC,aAAL,CAAmB,WAAnB,GAAiC,SAAjC,CAA2C,CAAC,IAAG;AAE3C,YAAA,OAAO,CAAC,GAAR,CAAY,CAAZ;;AACA,gBAAG,CAAC,CAAC,cAAF,CAAiB,SAAjB,KAA+B,CAAC,CAAC,CAAC,SAAD,CAApC,EAAgD;AAC5C,mBAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACA,qBAAO,MAAM,CAAC,KAAD,CAAb;AACH,aAHD,MAII;AACA,qBAAO,OAAO,CAAC,IAAD,CAAd;AACH;AAEJ,WAXD;AAYH,SAbM,CAAP;AAcH;;AAAA;AAEF,YAAM,GAAG,SAAS,OAAO,EAAzB;AACA,aAAO,GAAP;AAtBwE;AAuB1E;;AA/BoB;;;mBAAZ,Y,EAAY,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,kBAAA,C,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,MAAA,C;AAAA,C;;;SAAZ,Y;AAAY,EAAA,OAAA,EAAZ,YAAY,CAAA","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\r\nimport { take } from \"rxjs/operators\";\r\n\r\nimport { GetProductsService } from \"../../basket.service\";\r\n\r\n@Injectable()\r\nexport class PaymantGuard implements CanActivate\r\n{\r\n\r\n    constructor(\r\n        private basketService: GetProductsService,\r\n        private router: Router\r\n        ){}\r\n\r\n    async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\r\n        \r\n        const that = this;\r\n        function getData(): Promise<boolean>\r\n        {\r\n            return new Promise((resolve, reject) => {\r\n                that.basketService.getProducts().subscribe(e => {\r\n\r\n                    console.log(e)\r\n                    if(e.hasOwnProperty(\"userLog\") && !e[\"userLog\"]){\r\n                        this.router.navigate([\"\"]);\r\n                        return reject(false)\r\n                    }\r\n                    else{\r\n                        return resolve(true)\r\n                    }\r\n                    \r\n                });\r\n            });\r\n        };\r\n\r\n       const res = await getData();\r\n       return res;\r\n    }\r\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
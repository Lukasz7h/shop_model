{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/luuuk/Desktop/angular/shop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../basket.service\";\nexport class PaymantGuard {\n  constructor(basketService) {\n    this.basketService = basketService;\n  }\n\n  canActivate(route, state) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const that = _this;\n\n      function getData() {\n        return new Promise((resolve, reject) => {\n          that.basketService.getProducts().subscribe(e => console.log(e));\n          return resolve(true);\n        });\n      }\n\n      ;\n      yield getData();\n      return true;\n    })();\n  }\n\n}\n\nPaymantGuard.ɵfac = function PaymantGuard_Factory(t) {\n  return new (t || PaymantGuard)(i0.ɵɵinject(i1.GetProductsService));\n};\n\nPaymantGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PaymantGuard,\n  factory: PaymantGuard.ɵfac\n});","map":{"version":3,"sources":["C:\\Users\\luuuk\\Desktop\\angular\\shop\\src\\app\\basket\\paymant-method\\guards\\paymant-guard.ts"],"names":[],"mappings":";;;AAMA,OAAM,MAAO,YAAP,CAAmB;AAGrB,EAAA,WAAA,CAAoB,aAApB,EAAqD;AAAjC,SAAA,aAAA,GAAA,aAAA;AAAoC;;AAElD,EAAA,WAAW,CAAC,KAAD,EAAgC,KAAhC,EAA0D;AAAA;;AAAA;AAEvE,YAAM,IAAI,GAAG,KAAb;;AACA,eAAS,OAAT,GAAgB;AAEZ,eAAO,IAAI,OAAJ,CAAY,CAAC,OAAD,EAAU,MAAV,KAAoB;AACnC,UAAA,IAAI,CAAC,aAAL,CAAmB,WAAnB,GAAiC,SAAjC,CAA2C,CAAC,IAAI,OAAO,CAAC,GAAR,CAAY,CAAZ,CAAhD;AAEA,iBAAO,OAAO,CAAC,IAAD,CAAd;AACH,SAJM,CAAP;AAKH;;AAAA;AAED,YAAM,OAAO,EAAb;AACA,aAAO,IAAP;AAbuE;AAc1E;;AAnBoB;;;mBAAZ,Y,EAAY,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,kBAAA,C;AAAA,C;;;SAAZ,Y;AAAY,EAAA,OAAA,EAAZ,YAAY,CAAA","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from \"@angular/router\";\r\n\r\nimport { GetProductsService } from \"../../basket.service\";\r\n\r\n@Injectable()\r\nexport class PaymantGuard implements CanActivate\r\n{\r\n\r\n    constructor(private basketService: GetProductsService){}\r\n\r\n    async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\r\n        \r\n        const that = this;\r\n        function getData()\r\n        {\r\n            return new Promise((resolve, reject) => {\r\n                that.basketService.getProducts().subscribe(e => console.log(e));\r\n\r\n                return resolve(true);\r\n            });\r\n        };\r\n\r\n        await getData();\r\n        return true;\r\n    }\r\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
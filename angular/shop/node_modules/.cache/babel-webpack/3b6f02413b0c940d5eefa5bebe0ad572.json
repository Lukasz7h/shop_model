{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/luuuk/Desktop/angular/shop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { host } from './host';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CurrDataService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n\n  takeData(season, group) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const settings = [{\n        Men: \"Mężczyźni\",\n        Women: \"Kobiety\",\n        Child: \"Dzieci\"\n      }, {\n        spring: \"Wiosna\",\n        summer: \"Lato\",\n        fall: \"Jesień\",\n        winter: \"Zima\"\n      }];\n\n      function values(data) {\n        let res = null;\n        settings.filter(e => {\n          for (let x in e) {\n            if (e[x] === data) res = x;\n          }\n        });\n        return res;\n      }\n\n      const thatSeason = values(season);\n      const thatGroup = values(group);\n      return _this.httpClient.get(`${host}/stuff/sezon/${thatSeason}/${thatGroup}`);\n    })();\n  }\n\n}\n\nCurrDataService.ɵfac = function CurrDataService_Factory(t) {\n  return new (t || CurrDataService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nCurrDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CurrDataService,\n  factory: CurrDataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:\\Users\\luuuk\\Desktop\\angular\\shop\\src\\app\\main\\curr-data.service.ts"],"names":[],"mappings":";AAGA,SAAS,IAAT,QAAqB,QAArB;;;AAKA,OAAM,MAAO,eAAP,CAAsB;AAE1B,EAAA,WAAA,CACU,UADV,EACgC;AAAtB,SAAA,UAAA,GAAA,UAAA;AACN;;AAEE,EAAA,QAAQ,CAAC,MAAD,EAAiB,KAAjB,EAA8B;AAAA;;AAAA;AAE1C,YAAM,QAAQ,GAAG,CACf;AACE,QAAA,GAAG,EAAE,WADP;AAEE,QAAA,KAAK,EAAE,SAFT;AAGE,QAAA,KAAK,EAAE;AAHT,OADe,EAMf;AACE,QAAA,MAAM,EAAE,QADV;AAEE,QAAA,MAAM,EAAE,MAFV;AAGE,QAAA,IAAI,EAAE,QAHR;AAIE,QAAA,MAAM,EAAE;AAJV,OANe,CAAjB;;AAcA,eAAS,MAAT,CAAgB,IAAhB,EAAoB;AAEhB,YAAI,GAAG,GAAG,IAAV;AACA,QAAA,QAAQ,CAAC,MAAT,CAAiB,CAAD,IAAM;AAEpB,eAAI,IAAI,CAAR,IAAa,CAAb,EACA;AACE,gBAAG,CAAC,CAAC,CAAD,CAAD,KAAS,IAAZ,EAAkB,GAAG,GAAG,CAAN;AACnB;AACF,SAND;AAQF,eAAO,GAAP;AACD;;AAED,YAAM,UAAU,GAAG,MAAM,CAAC,MAAD,CAAzB;AACA,YAAM,SAAS,GAAG,MAAM,CAAC,KAAD,CAAxB;AAEA,aAAO,KAAI,CAAC,UAAL,CAAgB,GAAhB,CAAoB,GAAG,IAAI,gBAAgB,UAAU,IAAI,SAAS,EAAlE,CAAP;AAjC0C;AAkC3C;;AAxCyB;;;mBAAf,e,EAAe,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,C;;;SAAf,e;AAAe,EAAA,OAAA,EAAf,eAAe,CAAA,I;AAAA,EAAA,UAAA,EAFd","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { host } from './host';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CurrDataService {\n\n  constructor(\n    private httpClient: HttpClient,\n  ){ }\n\n  async takeData(season: string, group: string)\n  {\n    const settings = [\n      {\n        Men: \"Mężczyźni\",\n        Women: \"Kobiety\",\n        Child: \"Dzieci\",\n      },\n      {\n        spring: \"Wiosna\",\n        summer: \"Lato\",\n        fall: \"Jesień\",\n        winter: \"Zima\"\n      }\n    ];\n\n    function values(data)\n    {\n        let res = null;\n        settings.filter((e) => {\n          \n          for(let x in e)\n          {\n            if(e[x] === data) res = x;\n          }\n        })\n\n      return res;\n    }\n\n    const thatSeason = values(season);\n    const thatGroup = values(group);\n\n    return this.httpClient.get(`${host}/stuff/sezon/${thatSeason}/${thatGroup}`);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}